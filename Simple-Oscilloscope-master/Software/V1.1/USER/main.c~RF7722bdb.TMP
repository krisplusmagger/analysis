/*
ADC1-CH6(由TIME2-CH2触发)->DMA1->FFT
*/
#include "led.h"
#include "delay.h"
#include "sys.h"
#include "usart.h"
#include "lcd.h"
#include "adc.h"
#include "dma.h"
#include "key.h"
#include "stm32_dsp.h"
#include "table_fft.h"
#include "math.h"
#include "timer.h"

#define NPT 1024   //采样点数
#define PI2 6.28318530717959

void GetPowerMag(void);
void lcd_huadian(u16 a,u16 b);
void lcd_huaxian(u16 x1,u16 y1,u16 x2,u16 y2);
void Window(void);
void clear_point(void);

extern u16 display;
extern u16 ADC_ConvertedValue;//DMA每次接收到的数据
extern u8 adc_flag;//ADC采样一次完成标记

int long fftin[NPT];	//FFT输入数据
int long fftout[NPT];	//FFT输出数据

const u16 table[15] ={16,32,48,64,80,96,112,128,144,160,176,192,208,224,240};
const u16 T=1000;//TIM2自动重装载值
u16 T1=1000/T;//采样率，单位KHZ
u16 temp=0;
u32 F=0;//频率值
u32 adcmax=0;//完整采样一次后的最大值和最小值
u32 adcmin=0;
u16 V=660;//mv/div
u16 value;
u8 clear_flag=1;
u16 U=41;
u16 ADC_ConvertedValue;
u16 adcx[NPT];
u16 disadc[NPT/4];
u8 adc_flag;
int main()
{
	u16 i;//循环索引
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
	MYDMA_Config(DMA1_Channel1,(u32)&ADC1->DR,(u32)&ADC_ConvertedValue,1);
	delay_init();	    	 //延时函数初始化	  
	uart_init(115200);	 	//串口初始化为9600
	LED_Init();		  		//初始化与LED连接的硬件接口
	LCD_Init();
	Adc_Init();		  		//ADC初始化	
	TIM2_PWM_Init(T-1,71);//72M/72/1000=1KHz
	Window();	
	while(1)
	{
		while(adc_flag == 1){}			//等待数据采集完成
        adc_flag=0;
			
		//NPT，1024个点，确定max与min
		for(i=0;i<NPT;i++)
		{
			fftin[i] = 0;
			fftin[i] = adcx[i] << 16;
			
			if(adcx[i] >= adcmax)
			{			
				adcmax = adcx[i];
			}			
			if(adcx[i] <= adcmin)
			{			
				adcmin = adcx[i];
			}					
		}
		for(i=0;i<NPT;i++)
		{
			printf("The current value =%d \r\n",adcx[i]);
		}
		GetPowerMag();
		LCD_ShowNum(260,20,V,4,16);//mv/div
		adcmax=adcmax*0.8;   //0.8 = 3300/4096		
		LCD_ShowNum(260,75,adcmax-adcmin,4,16);				
		clear_point();    //更新显示屏当前列
		
		LED0=!LED0;
		DMA_Cmd(DMA1_Channel1,ENABLE);//使能DMA通道
		delay_ms(100);
	}
}

/******************************************************************
函数名称:InitBufInArray()
函数功能:模拟采样数据，采样数据中包含3种频率正弦波(350Hz，8400Hz，18725Hz)
参数说明:
备    注:在lBufInArray数组中，每个数据的高16位存储采样数据的实部，
          低16位存储采样数据的虚部(总是为0)
*******************************************************************/
//void InitBufInArray()
//{
//    unsigned short i;
//    float fx;
//    for(i=0; i<NPT; i++)
//    {
//        fx = 50*sin(PI2 * i * 250.0 / 1000);
//        magout2[i] = ((signed short)fx) << 16;
//    }
//}

/******************************************************************
函数名称:GetPowerMag()
函数功能:计算各次谐波幅值,并显示频率
参数说明:
备　　注:先将lBufOutArray分解成实部(X)和虚部(Y)，然后计算幅值(sqrt(X*X+Y*Y)
*******************************************************************/
void GetPowerMag(void)
{
    float X,Y,Mag;
	float magmax=0;
    unsigned short i;
	magmax=0;
	//调用自cr4_fft_1024_stm32
	cr4_fft_1024_stm32(fftout, fftin, NPT);	
    for(i=1; i<NPT/2; i++)
    {
        X  = (fftout[i] << 16) >> 16;
        Y  = (fftout[i] >> 16);
        Mag = sqrt(X * X + Y * Y);     
		if(Mag > magmax)
			{
			magmax = Mag;
			temp = i;
			}				
    }
	if(T==1000)		F=(u32)((double)temp/NPT*1000  );	
	if(T==100)		F=(u32)((double)temp/NPT*10010 );
	if(T==10)		F=(u32)((double)temp/NPT*100200);
	if(T==2)		F=(u32)((double)temp/NPT*249760);
	
	LCD_ShowNum(280,180,F,5,16);		
//	LCD_ShowNum(280,200,temp,4,16);					
//	LCD_ShowNum(280,220,(u32)(magmax*2.95),5,16);			
}

//画点函数
void lcd_huadian(u16 a,u16 b)
{							    
	LCD_Fast_DrawPoint(a,240-b,BLUE);
}

//画线函数
void lcd_huaxian(u16 x1,u16 y1,u16 x2,u16 y2)
{
	LCD_DrawLine(x1,240-y1,x2,240-y2);
}

//主界面
void Window(void)
{
	POINT_COLOR=RED;	  
	LCD_ShowString(5,8,200,24,24,"mini_OSC");	
	LCD_ShowString(128,12,200,16,16,"INPUT:PA6");
	LCD_ShowString(260,0,200,16,16,"mV/div:");
	LCD_ShowString(260,55,200,16,16,"vpp(mv):");	
	LCD_ShowString(260,165,200,16,16,"f(Hz):");
	LCD_ShowString(260,200,200,16,16,"OSR:");  //采样率

	POINT_COLOR=BLUE;		
	
	lcd_huaxian(0,0,0,200);
	lcd_huaxian(256,0,256,200);
	lcd_huaxian(0,0,256,0);		
	lcd_huaxian(0,200,256,200);

	LCD_ShowNum(260,220,T1,4,16);
	LCD_ShowString(295,220,200,16,16,"kHz");	
	LCD_ShowString(260,110,200,16,16,"ing...");
}

void clear_point(void)//更新显示屏当前列
{
	u16 x,h,i;
	u32 v,v1;
	for(x=0;x<NPT;x+=4)
	{
		disadc[x/4]=(adcx[x]+adcx[x+1]+adcx[x+2]+adcx[x+3])/4;
	}
	
	for(x=0;x<NPT/4;x++)
	{
//		if(n<256)            x=n;
//		if(n>=256 && n<512)  x=n-256;
//		if(n>=512 && n<768)  x=n-512;
//		if(n>=768 && n<1024) x=n-768;	
	
		POINT_COLOR=WHITE;	
		lcd_huaxian(x,1,x,199);
		POINT_COLOR=BLUE;
		lcd_huaxian(0,0,0,200);
		lcd_huadian(x,100);
		
		if(x == table[h])	
		{
			lcd_huaxian(x,1,x,3);
			lcd_huaxian(x,101,x,103);
			lcd_huaxian(x,199,x,197);
			h++;
			if(h>=16) h=0;
		}	
		if(x==128) 
		{
			lcd_huaxian(x,1,x,199);
			for(i=20;i<200;i+=20)
			{
				lcd_huaxian(127,i,129,i);
			}
		}
		
		v = adcx[x]/U+(90-((adcmax-adcmin)/(2*U)));
//		v = disadc[x]*150.0/4096+10;
//		printf("%d",disadc[x]);
//		printf("adcmax:%lu\r\nadcmin:%lu\r\n",adcmax,adcmin);
//		printf("v: %d\r\n",v);
//		lcd_huaxian(x,v1,x+1,v);
		lcd_huadian(x,v);
//		v1 = v;
//        delay_ms(10);	
	}
}

//DMA中断
void DMA1_Channel1_IRQHandler(void) 
{
	static u16 t=0;
	if(DMA_GetITStatus(DMA1_IT_TC1)!=RESET)
	{
		adcx[t]=ADC_ConvertedValue;	//数据传入缓存	
//		printf("%d \r\n",adcx[t]);
		//printf("adcx[t]:%lu\r\n",adcx[t]);
		t++;
		if(t==NPT) 
		{
			t=0;
			adc_flag = 1;
			DMA_Cmd(DMA1_Channel1,DISABLE);//使能DMA通道
		}
		DMA_ClearITPendingBit(DMA1_IT_TC1);//清除DMA中断
	}
}
